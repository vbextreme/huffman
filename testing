#!/bin/bash

[[ ! -d ./test ]] && mkdir ./test

TESTSIZE=(4 256 512 1024 4096 524288)

echo "generate"
for ts in "${TESTSIZE[@]}"; do
	fname="./test/data.${ts}.raw"
	[[ ! -f $fname ]] && dd bs=1024 count=$ts </dev/urandom >$fname
done
sync

if [[ ! -d ./build ]]; then
	meson setup build
	cd build
	ninja
	cd ..
fi

TIMEFORMAT=%R
comptime=('compression')
decmtime=('decompression')
rapp=('compression ratio')
resul=('result')

echo "testing"
for ts in "${TESTSIZE[@]}"; do
	fname="./test/data.${ts}"
	fraw="${fname}.raw"
	fcmp="${fname}.hff"
	fdec="${fname}.dec"
	ttest="successfull"
	comptime+=($( { time cat "$fraw" | ./build/huffman -c > "$fcmp"; } 2>&1 ))
	if [ $? == 0 ]; then
		decmtime+=($( { time cat "$fcmp" | ./build/huffman -d > "$fdec"; } 2>&1 ))
		if [ $? == 0 ]; then
			if [ "$(md5sum $fraw | awk '{print $1}')" = "$(md5sum $fdec | awk '{print $1}')" ]; then
				resul+=("successfull")
				ssrc=$(stat -c %s ${fraw})
				scom=$(stat -c %s ${fcmp})
				rapp+=($(awk -v o=$ssrc -v c=$scom 'BEGIN { printf "%.2f", (1 - c/o) * 100 }'))
			else
				rapp+=(-1)
				resul+=("fail")
			fi
		else
			rapp+=(-1)
			resul+=('err.decompression')
		fi
	else
		decmtime+=(-1)
		rapp+=(-1)
		resul+=('err.compression')
	fi
done

echo "result"
TESTSIZE=("size" "${TESTSIZE[@]}")
for i in "${!TESTSIZE[@]}"; do
	echo -e "${TESTSIZE[i]}:${comptime[i]}s:${decmtime[i]}s:%${rapp[i]}:${resul[i]}"
done | column -t -s :


